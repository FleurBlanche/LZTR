<?xml version="1.0" encoding="UTF-8"?>
<!-- Spring Schema -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/data/mongo     
    	http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd 
    	http://www.springframework.org/schema/mvc 
    	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
    	http://www.springframework.org/schema/cache 
    	http://www.springframework.org/schema/cache/spring-cache-3.0.xsd 
    	http://www.springframework.org/schema/task 
    	http://www.springframework.org/schema/task/spring-task-3.0.xsd
    	http://www.springframework.org/schema/context
    	http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!--<mongo:mongo host="127.0.0.1" port="27017" />

	<mongo:db-factory dbname="bookstore" mongo-ref="mongo" />

	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
	</bean>

	<mongo:mapping-converter base-package="model.BookMongo*" />

	<mongo:repositories base-package="dao.impl" />

	<context:annotation-config /> -->
	


	<!-- Bean -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" p:driverClass="com.mysql.jdbc.Driver"
		p:jdbcUrl="jdbc:mysql://localhost:3306/questionnaire" p:user="root"
		p:password="327453nmg" p:maxPoolSize="40" p:minPoolSize="1"
		p:initialPoolSize="1" p:maxIdleTime="20" />


	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
		p:dataSource-ref="dataSource">
		<property name="mappingResources">
			<list>
				<value>model/User.hbm.xml</value>
			</list>
		</property>
		<!-- Hibernate SessionFactory -->
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
				hibernate.hbm2ddl.auto=update
				hibernate.show_sql=true
				hibernate.format_sql=true
			</value>
		</property>
	</bean>

	<!-- DAO Bean -->
	<bean id="userDao" class="dao.impl.UserDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	
	<!-- Service -->
	<bean id="userService" class="service.impl.UserServiceImpl">
		<!-- DAO -->
		<property name="userDao" ref="userDao"></property>
	</bean>
	
	<!-- DAO Bean -->
	<bean id="questionnaireDao" class="dao.impl.QuestionnaireDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	
	<!-- Service -->
	<bean id="questionnnaireService" class="service.impl.questionnaireServiceImpl">
		<!-- DAO -->
		<property name="questionnaireDao" ref="questionnaireDao"></property>
	</bean>

	<!-- HibernateTransactionManager -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<!-- appService Bean -->
		<aop:pointcut id="beanPointcut" expression="bean(appService)" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="beanPointcut" />
	</aop:config>
	
		<bean id="loginDao" class="dao.impl.LoginDaoImpl">
		<property name="sessionFactory">
			<ref bean="sessionFactory"></ref>
		</property>
	</bean>
	
		
	<bean id="loginService" class="service.impl.LoginServiceImpl">
		<property name="loginDao" ref="loginDao"></property>
	</bean>
	
	<!-- Action -->
	<bean id="loginAction" class="action.LoginAction" scope="prototype">
		<property name="loginService" ref="loginService"></property>
	</bean>

</beans>